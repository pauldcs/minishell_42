/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   token.h                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nmathieu <nmathieu@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/06/01 20:04:27 by nmathieu          #+#    #+#             */
/*   Updated: 2022/07/04 12:11:22 by nmathieu         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef TOKEN_H
# define TOKEN_H

# include "ms/utils/str.h"

// If a `t_ms_tok_kind` contains this mask, it is an error token.
# define MS_TOK_ERR_MASK 0x80000000

// The kind of a token.
typedef enum e_ms_tok_kind
{
	MS_TOK_EOF,
	MS_TOK_NEWLINE,
	MS_TOK_WORD,
	MS_TOK_DAND,
	MS_TOK_OR,
	MS_TOK_DOR,
	MS_TOK_LESS,
	MS_TOK_DLESS,
	MS_TOK_GREAT,
	MS_TOK_DGREAT,
	MS_TOK_OPAREN,
	MS_TOK_CPAREN,
	MS_TOK_ERR_NOSQUOTE = MS_TOK_ERR_MASK,
	MS_TOK_ERR_NODQUOTE,
}	t_ms_tok_kind;

// A token, generated by the `ms_next_token` function.
typedef struct s_ms_tok
{
	t_ms_tok_kind	kind;
	char			*slice;
}	t_ms_tok;

// Displays the provided token.
void	ms_tok_show(t_ms_tok *token);

#endif
